#include <stdio.h>
#include <stdlib.h>
#include "LinkedList.h"
#include "Controller.h"
#include "Passenger.h"

#include "Tipo.h"
#include "Estado.h"
#include "otros.h"
#include "menus.h"
#define TAM_TIPO 3
#define TAM_ESTADO 4

int main()
{
	setbuf(stdout,NULL);
    LinkedList* listaPasajeros = ll_newLinkedList();
    verificarNULL(listaPasajeros);
	eTipo tipos[TAM_TIPO];
	hardCodearTipos(tipos, TAM_TIPO);
	eEstado estados[TAM_ESTADO];
	hardCodearEstados(estados, TAM_ESTADO);
	char salir;
	do{
		switch(menu())
		{
			case 1:
				if(!ll_isEmpty(listaPasajeros)){
					printf("Atencion")
				}
				if(!controller_loadFromText("data.csv",listaPasajeros, tipos, estados, TAM_TIPO, TAM_ESTADO)){
					printf("Se cargaron los datos con exito.\n");
				}else{
					printf("Hubo en error en las validaciones.\n");
				}
				break;
			case 2:
				if(!controller_loadFromBinary("data.bin",listaPasajeros)){
					printf("Se cargaron los datos con exito.\n");
				}else{
					printf("Hubo en error en las validaciones.\n");
				}
				break;
			case 3:
				controller_addPassenger(listaPasajeros, tipos, estados, TAM_TIPO, TAM_ESTADO);
				break;
			case 4:
				controller_editPassenger(listaPasajeros, tipos, estados, TAM_TIPO, TAM_ESTADO);
				break;
			case 5:
				controller_removePassenger(listaPasajeros, tipos, estados, TAM_TIPO, TAM_ESTADO);
				break;
			case 6:
				controller_ListPassenger(listaPasajeros, tipos, estados,TAM_TIPO, TAM_ESTADO);
				break;
			case 7:
				controller_sortPassenger(listaPasajeros, tipos, estados,TAM_TIPO, TAM_ESTADO);
				break;
			case 8:
				controller_saveAsText("data.csv",listaPasajeros, tipos, estados,TAM_TIPO, TAM_ESTADO);
				break;
			case 9:
				controller_saveAsBinary("data.bin",listaPasajeros);
				break;
			case 10:
				if(!cerrar(&salir)){
					printf("Hubo un problema con la validacion.\n");
				}else{
					controller_liberarMemoria(listaPasajeros);
				}
				break;
		}
		system("pause");
		system("cls");
	}while(salir!='s');

    return 0;
}

/*
 * ArrayPassenger.c
 *
 *  Created on: 25 abr. 2022
 *      Author: Jony
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "ArrayPassenger.h"
#include "validaciones.h"
#include "otros.h"
#include "menus.h"


int initPassengers(Passenger* list, int len){
	int todoOk=-1;
	if(list!=NULL && len>0){
		for(int i=5;i<len; i++){
			list[i].isEmpty=1;
		}
		todoOk=0;
	}
	return todoOk;
}

int validarDatos(char name[], char lastName[], float* price, char flycode[], int* typePassenger, int tamName, int tamFly){
	int todoOk=0;
	if(name!=NULL && lastName!=NULL && price!=NULL && flycode!=NULL && typePassenger!=NULL && tamName>0 && tamFly>0){
		cargarValidarCadena("Ingrese el nombre del pasajero",tamName,name);
		cargarValidarCadena("Ingrese el apellido del pasajero",tamName,lastName);
		cargarValidarDecimalPositivo("Ingrese el precio", price);
		cargarValidarAlfaNumerico("Ingrese el codigo de vuelo", tamFly, flycode);
		enteroEnRango("Ingrese en que clase viaja(1/2/3)",typePassenger, 1,3);

		todoOk=1;
	}
	return todoOk;
}
int addPassenger(Passenger* list, int len, int id, char name[],char lastName[],float price,int typePassenger, char flycode[]){
	int todoOk=-1;
	int idLibre;
	if(list!=NULL && len>0 && name!=NULL && lastName!=NULL && flycode!=NULL){
		if(!buscarLibre(list, len, &idLibre)){
			printf("Hubo un error en validar los punteros.");
		}
		if(idLibre==-1){
			printf("No hay lugar disponible.\n");
		}else{
			capitalizar(name);
			capitalizar(lastName);

			list[idLibre].id=id;
			strcpy(list[idLibre].name,name);
			strcpy(list[idLibre].lastName,lastName);
			list[idLibre].price=price;
			list[idLibre].typePassenger=typePassenger;
			strcpy(list[idLibre].flycode, flycode);
			list[idLibre].statusFlight=numeroRandom(1,3);
			list[idLibre].isEmpty=0;
			todoOk=0;
		}
	}
	return todoOk;
}
int buscarLibre(Passenger* list, int len,int* idLibre){
	int todoOk=0;
	*idLibre=-1;
	if(list!=NULL && len>0){
		for(int i =0; i<len;i++){
			if(list[i].isEmpty==1){
				*idLibre=i;
				break;
			}
		}
		todoOk=1;
	}
	return todoOk;
}

void printfPassenger(Passenger pasajero){
	printf("%4d %12s %12s  $%9.2f %6d %10s",pasajero.id, pasajero.name,pasajero.lastName, pasajero.price, pasajero.typePassenger, pasajero.flycode);
	switch(pasajero.statusFlight){
		case 1:
			printf("%11s\n","ACTIVO");
			break;
		case 2:
			printf("%11s\n","CANCELADO");
			break;
		case 3:
			printf("%11s\n","DEMORADO");
			break;

	}
}
int printfPassengers(Passenger pasajeros[], int length){
	int todoOk=-1;
	if(pasajeros!=NULL && length>0){
		system("cls");
		printf("  ID       NOMBRE     APELLIDO      PRECIO  CLASE     CODIGO     ESTADO\n");
		for(int i=0; i<length;i++){
			if(pasajeros[i].isEmpty==0){
				printfPassenger(pasajeros[i]);
			}
		}
		todoOk=0;
	}
	return todoOk;
}
int findPassengerById(Passenger* list, int len,int id){
	int todoOk=-1;
	if(list!=NULL && len>0){
		for(int i=0; i<len;i++){
			if(list[i].id==id){
				todoOk=i;
			}
		}
	}
	return todoOk;
}
int removePassenger(Passenger* list, int len, int id){
	int todoOk=-1;
	int auxId;
	if(list!=NULL && len>0){
		auxId=findPassengerById(list, len, id);
		if(auxId==-1){
			printf("No se encontro el id seleccionado.\n");
		}else{
			list[auxId].isEmpty=1;
			printf("Se removio al pasajero con exito.\n");
		}
		todoOk=0;
	}
	return todoOk;
}
int modificarPasajero(Passenger* list, int len, int id, int opcion,int tamName, int tamFly){
	int todoOk=-1;
	int index;
	if(list!=NULL && len>0){
		index=findPassengerById(list, len, id);
		if(index==-1){
			printf("No se encontro el id seleccionado.\n");
		}else{
			switch(opcion){
				case 1:
					cargarValidarCadena("Ingrese el nombre del pasajero",tamName,list[index].name);
					break;
				case 2:
					cargarValidarCadena("Ingrese el apellido del pasajero",tamName,list[index].lastName);
					break;
				case 3:
					cargarValidarDecimalPositivo("Ingrese el precio", &(list[index].price));
					break;
				case 4:
					cargarValidarAlfaNumerico("Ingrese el codigo de vuelo", tamFly, list[index].flycode);
					break;
				case 5:
					enteroEnRango("Ingrese en que clase viaja(1/2/3)",&(list[index].typePassenger), 1,3);
					break;
				case 6:
					enteroEnRango("Ingrese el estado de vuelo (1-ACTIVO/2-CANCELADO/3-DEMORADO)",&(list[index].statusFlight), 1,3);
					break;
			}
			printf("Se modifico el usuario con exito.\n");
		}

		todoOk=0;
	}





	return todoOk;
}

int informes(Passenger* list, int len){
	int todoOk=-1;
	int auxEntero;
	if(list!=NULL && len>0){
		switch(menuInformes()){
		case 1:
			printfPassengers(list, len);
			break;
		case 2:
			auxEntero=ascendenteDescendente();
			sortPassengers(list, len,auxEntero);
			break;
		case 3:
			auxEntero=ascendenteDescendente();
			sortPassengersByCode(list, len,auxEntero);
			break;
		case 4:

			break;
		}
		todoOk=0;
	}
	return todoOk;
}
int sortPassengers(Passenger* list, int len, int order){
	int todoOk=-1;
	Passenger aux;
	if(list!=NULL && len>0){
		for(int i=0; i<len-1;i++){
			for(int u=i+1; u<len; u++){
				switch(order){
				case 1:
					if(strcmp(list[i].lastName, list[u].lastName)==1){
						aux=list[i];
						list[i]=list[u];
						list[u]=aux;
					}else if(strcmp(list[i].lastName, list[u].lastName)==0 && list[i].typePassenger>list[u].typePassenger){
						aux=list[i];
						list[i]=list[u];
						list[u]=aux;
					}
					break;
				case 2:
					if(strcmp(list[i].lastName, list[u].lastName)==-1){
						aux=list[i];
						list[i]=list[u];
						list[u]=aux;
					}else if(strcmp(list[i].lastName, list[u].lastName)==0 && list[i].typePassenger<list[u].typePassenger){
						aux=list[i];
						list[i]=list[u];
						list[u]=aux;
					}
					break;
				}
			}
		}
		printfPassengers(list, len);
		todoOk=0;
	}
	return todoOk;
}
int sortPassengersByCode(Passenger* list, int len, int order){
	int todoOk=-1;
	Passenger aux;
	if(list!=NULL && len>0){
		for(int i=0; i<len-1;i++){
			for(int u=i+1; u<len; u++){
				switch(order){
				case 1:
					if(strcmp(list[i].flycode, list[u].flycode)==1){
						aux=list[i];
						list[i]=list[u];
						list[u]=aux;
					}
					break;
				case 2:
					if(strcmp(list[i].lastName, list[u].lastName)==-1){
						aux=list[i];
						list[i]=list[u];
						list[u]=aux;
					}
					break;
				}
			}
		}
		system("cls");
		printf("  ID       NOMBRE     APELLIDO      PRECIO  CLASE     CODIGO     ESTADO\n");
		for(int i=0; i<len;i++){
			if(list[i].isEmpty==0 && list[i].statusFlight==1){
				printfPassenger(list[i]);
			}
		}
		todoOk=0;
	}
	return todoOk;
}
